<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classspinhalfKondo" kind="class" language="C++" prot="public">
    <compoundname>spinhalfKondo</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classspinhalfKondo_1abb3e2b161539ec050f789c808679484b" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;double&gt; &gt; spinhalfKondo::eigenvalues_Q</definition>
        <argsstring></argsstring>
        <name>eigenvalues_Q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/spinhalfKondo.hpp" line="43" column="1" bodyfile="nrgcore/include/models/spinhalfKondo.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspinhalfKondo_1ae4c9ee5168cbb841f3fdc1ee3948c92b" prot="public" static="no" mutable="no">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; spinhalfKondo::chi_Q</definition>
        <argsstring></argsstring>
        <name>chi_Q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/spinhalfKondo.hpp" line="44" column="1" bodyfile="nrgcore/include/models/spinhalfKondo.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspinhalfKondo_1a6dc7ce518ab6e99fc1beafa96a2d0ab9" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classqOperator" kindref="compound">qOperator</ref> &gt;</type>
        <definition>std::vector&lt;qOperator&gt; spinhalfKondo::f_dag_operator</definition>
        <argsstring></argsstring>
        <name>f_dag_operator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/spinhalfKondo.hpp" line="45" column="1" bodyfile="nrgcore/include/models/spinhalfKondo.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classspinhalfKondo_1acff3dff7b2e1b836cfb4279e925e5785" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;int&gt; &gt; spinhalfKondo::n_Q</definition>
        <argsstring></argsstring>
        <name>n_Q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/spinhalfKondo.hpp" line="46" column="1" bodyfile="nrgcore/include/models/spinhalfKondo.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classspinhalfKondo_1a5d4de8ea30e2f5f528393c1c2c69fde2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>spinhalfKondo::spinhalfKondo</definition>
        <argsstring>(double JKondo, double spinS)</argsstring>
        <name>spinhalfKondo</name>
        <param>
          <type>double</type>
          <declname>JKondo</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spinS</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classspinhalfKondo" kindref="compound">spinhalfKondo</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para>This class is for a single orbital with spin up and down f operator. SIAM can be made entirely from this class. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>JKondo</parametername>
</parameternamelist>
<parameterdescription>
<para>J value for the Kondo interaction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>spinS</parametername>
</parameternamelist>
<parameterdescription>
<para>Spin value i.e,. 1/2 or 3/2. Integer Spin may not work </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/spinhalfKondo.hpp" line="28" column="1" bodyfile="nrgcore/include/models/spinhalfKondo.hpp" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="classspinhalfKondo_1a0b8a639eb59669f4625e6b76b408169e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;int&gt; &gt; spinhalfKondo::get_basis</definition>
        <argsstring>() const</argsstring>
        <name>get_basis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/spinhalfKondo.hpp" line="37" column="1" bodyfile="nrgcore/include/models/spinhalfKondo.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classspinhalfKondo_1a16d3f9c3f1748cbd7642b86dbb4ba8be" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;double&gt; &gt; spinhalfKondo::get_eigenvaluesQ</definition>
        <argsstring>() const</argsstring>
        <name>get_eigenvaluesQ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/spinhalfKondo.hpp" line="38" column="1" bodyfile="nrgcore/include/models/spinhalfKondo.hpp" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classspinhalfKondo_1a8d92513c4d2effd93da6fa15d5471ec0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; spinhalfKondo::get_chi_Q</definition>
        <argsstring>() const</argsstring>
        <name>get_chi_Q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/spinhalfKondo.hpp" line="41" column="1" bodyfile="nrgcore/include/models/spinhalfKondo.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classspinhalfKondo_1a59a5861ab76407fcc3009c4a2f3363b8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void spinhalfKondo::createBasis</definition>
        <argsstring>(double JKondo, double spinS)</argsstring>
        <name>createBasis</name>
        <param>
          <type>double</type>
          <declname>JKondo</declname>
        </param>
        <param>
          <type>double</type>
          <declname>spinS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/spinhalfKondo.hpp" line="49" column="1" bodyfile="nrgcore/include/models/spinhalfKondo.hpp" bodystart="49" bodyend="166"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="nrgcore/include/models/spinhalfKondo.hpp" line="15" column="1" bodyfile="nrgcore/include/models/spinhalfKondo.hpp" bodystart="15" bodyend="168"/>
    <listofallmembers>
      <member refid="classspinhalfKondo_1ae4c9ee5168cbb841f3fdc1ee3948c92b" prot="public" virt="non-virtual"><scope>spinhalfKondo</scope><name>chi_Q</name></member>
      <member refid="classspinhalfKondo_1a59a5861ab76407fcc3009c4a2f3363b8" prot="private" virt="non-virtual"><scope>spinhalfKondo</scope><name>createBasis</name></member>
      <member refid="classspinhalfKondo_1abb3e2b161539ec050f789c808679484b" prot="public" virt="non-virtual"><scope>spinhalfKondo</scope><name>eigenvalues_Q</name></member>
      <member refid="classspinhalfKondo_1a6dc7ce518ab6e99fc1beafa96a2d0ab9" prot="public" virt="non-virtual"><scope>spinhalfKondo</scope><name>f_dag_operator</name></member>
      <member refid="classspinhalfKondo_1a0b8a639eb59669f4625e6b76b408169e" prot="public" virt="non-virtual"><scope>spinhalfKondo</scope><name>get_basis</name></member>
      <member refid="classspinhalfKondo_1a8d92513c4d2effd93da6fa15d5471ec0" prot="public" virt="non-virtual"><scope>spinhalfKondo</scope><name>get_chi_Q</name></member>
      <member refid="classspinhalfKondo_1a16d3f9c3f1748cbd7642b86dbb4ba8be" prot="public" virt="non-virtual"><scope>spinhalfKondo</scope><name>get_eigenvaluesQ</name></member>
      <member refid="classspinhalfKondo_1acff3dff7b2e1b836cfb4279e925e5785" prot="public" virt="non-virtual"><scope>spinhalfKondo</scope><name>n_Q</name></member>
      <member refid="classspinhalfKondo_1a5d4de8ea30e2f5f528393c1c2c69fde2" prot="public" virt="non-virtual"><scope>spinhalfKondo</scope><name>spinhalfKondo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
