<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="timer_8hpp" kind="file" language="C++">
    <compoundname>timer.hpp</compoundname>
    <includes local="no">chrono</includes>
    <includes local="no">iostream</includes>
    <includes local="no">string</includes>
    <includes local="no">thread</includes>
    <includedby refid="fdmBackwardIteration_8hpp" local="yes">nrgcore/include/dynamics/fdmBackwardIteration.hpp</includedby>
    <includedby refid="fdmSpectrum_8hpp" local="yes">nrgcore/include/dynamics/fdmSpectrum.hpp</includedby>
    <includedby refid="nrgcore_8hpp" local="yes">nrgcore/include/nrgcore/nrgcore.hpp</includedby>
    <includedby refid="nrgData_8hpp" local="yes">nrgcore/include/nrgcore/nrgData.hpp</includedby>
    <includedby refid="sysOperator_8hpp" local="yes">nrgcore/include/nrgcore/sysOperator.hpp</includedby>
    <includedby refid="fdmThermodynamics_8hpp" local="yes">nrgcore/include/static/fdmThermodynamics.hpp</includedby>
    <includedby refid="sparseSolver_8hpp" local="yes">nrgcore/include/utils/sparseSolver.hpp</includedby>
    <incdepgraph>
      <node id="614">
        <label>string</label>
      </node>
      <node id="611">
        <label>nrgcore/include/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="612" relation="include">
        </childnode>
        <childnode refid="613" relation="include">
        </childnode>
        <childnode refid="614" relation="include">
        </childnode>
        <childnode refid="615" relation="include">
        </childnode>
      </node>
      <node id="613">
        <label>iostream</label>
      </node>
      <node id="612">
        <label>chrono</label>
      </node>
      <node id="615">
        <label>thread</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="618">
        <label>nrgcore/include/dynamics/fdmSpectrum.hpp</label>
        <link refid="fdmSpectrum_8hpp_source"/>
      </node>
      <node id="617">
        <label>nrgcore/include/dynamics/fdmBackwardIteration.hpp</label>
        <link refid="fdmBackwardIteration_8hpp_source"/>
      </node>
      <node id="620">
        <label>nrgcore/include/nrgcore/nrgData.hpp</label>
        <link refid="nrgData_8hpp_source"/>
        <childnode refid="617" relation="include">
        </childnode>
      </node>
      <node id="621">
        <label>nrgcore/include/nrgcore/sysOperator.hpp</label>
        <link refid="sysOperator_8hpp_source"/>
      </node>
      <node id="616">
        <label>nrgcore/include/utils/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="617" relation="include">
        </childnode>
        <childnode refid="618" relation="include">
        </childnode>
        <childnode refid="619" relation="include">
        </childnode>
        <childnode refid="620" relation="include">
        </childnode>
        <childnode refid="621" relation="include">
        </childnode>
        <childnode refid="622" relation="include">
        </childnode>
        <childnode refid="623" relation="include">
        </childnode>
      </node>
      <node id="619">
        <label>nrgcore/include/nrgcore/nrgcore.hpp</label>
        <link refid="nrgcore_8hpp_source"/>
      </node>
      <node id="622">
        <label>nrgcore/include/static/fdmThermodynamics.hpp</label>
        <link refid="fdmThermodynamics_8hpp_source"/>
      </node>
      <node id="623">
        <label>nrgcore/include/utils/sparseSolver.hpp</label>
        <link refid="sparseSolver_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classtimer" prot="public">timer</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="classtimer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtimer" kindref="compound">timer</ref><sp/>{<sp/></highlight><highlight class="comment">//<sp/>NOLINT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classtimer" kindref="compound">timer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;name<sp/>=<sp/>std::string(</highlight><highlight class="stringliteral">&quot;main&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>fn_name(name)<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Starting<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>name<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()<sp/>{<sp/>start<sp/>=<sp/>std::chrono::high_resolution_clock::now();<sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>~<ref refid="classtimer" kindref="compound">timer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Elapsed<sp/>time<sp/>for<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fn_name<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>getDuration()</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;sec&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDuration()<sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>duration<sp/>in<sp/>second</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>=<sp/>std::chrono::high_resolution_clock::now();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time_span<sp/>=</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::chrono::duration_cast&lt;std::chrono::duration&lt;double&gt;&gt;(end<sp/>-<sp/>start)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.count();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time_span;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>std::string<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn_name;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>std::chrono::high_resolution_clock::time_point<sp/>start;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>std::chrono::high_resolution_clock::time_point<sp/>end;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="nrgcore/include/utils/timer.hpp"/>
  </compounddef>
</doxygen>
