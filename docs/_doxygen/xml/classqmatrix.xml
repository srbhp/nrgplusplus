<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classqmatrix" kind="class" language="C++" prot="public">
    <compoundname>qmatrix</compoundname>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classqmatrix_1a97ad80143ea431b38846dc9694fb36a3" prot="private" static="no" mutable="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; qmatrix&lt; T &gt;::mat</definition>
        <argsstring></argsstring>
        <name>mat</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="51" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classqmatrix_1abf573175a0121877413be95346290dd4" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t qmatrix&lt; T &gt;::row</definition>
        <argsstring></argsstring>
        <name>row</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="52" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classqmatrix_1a27efbbb3280bcc5e102845f521a5874b" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t qmatrix&lt; T &gt;::column</definition>
        <argsstring></argsstring>
        <name>column</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="52" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classqmatrix_1ae168d34e9394535fa085666e7e9b53c9" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t qmatrix&lt; T &gt;::dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="52" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classqmatrix_1a9e5e9003f3ce469757a099f0a5cb387d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>qmatrix&lt; T &gt;::qmatrix</definition>
        <argsstring>(const std::initializer_list&lt; T &gt; inputVec, size_t _row=0, size_t _column=0)</argsstring>
        <name>qmatrix</name>
        <param>
          <type>const std::initializer_list&lt; T &gt;</type>
          <declname>inputVec</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_row</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>_column</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="55" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="55" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1ab09878c317208706ea39b8cf868355ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>qmatrix&lt; T &gt;::qmatrix</definition>
        <argsstring>(const std::vector&lt; T &gt; &amp;inputVec, size_t _row=0, size_t _column=0)</argsstring>
        <name>qmatrix</name>
        <param>
          <type>const std::vector&lt; T &gt; &amp;</type>
          <declname>inputVec</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_row</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>_column</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="76" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="76" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a902c08267bf4f6e49a982140470a8014" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>qmatrix&lt; T &gt;::qmatrix</definition>
        <argsstring>(size_t _row, size_t _column, T populate)</argsstring>
        <name>qmatrix</name>
        <param>
          <type>size_t</type>
          <declname>_row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>_column</declname>
        </param>
        <param>
          <type>T</type>
          <declname>populate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="94" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="94" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a0a392ae029af40d7eac0bd4dae61257a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void qmatrix&lt; T &gt;::resize</definition>
        <argsstring>(size_t _row=0, size_t _column=0, T populate=0)</argsstring>
        <name>resize</name>
        <param>
          <type>size_t</type>
          <declname>_row</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>size_t</type>
          <declname>_column</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>T</type>
          <declname>populate</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="102" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="102" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a2680c028b1b135431723997b8baebc6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void qmatrix&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="110" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="110" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1aa03000cc351014a3d862b32ad1d812e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>qmatrix&lt; T &gt;::qmatrix</definition>
        <argsstring>(size_t N, T populate)</argsstring>
        <name>qmatrix</name>
        <param>
          <type>size_t</type>
          <declname>N</declname>
        </param>
        <param>
          <type>T</type>
          <declname>populate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="117" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a633f6c2391c796e4c7f3be3625c9534f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>qmatrix&lt; T &gt;::qmatrix</definition>
        <argsstring>()</argsstring>
        <name>qmatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="118" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1aa844a436f313995011c9c6532aa56f69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; qmatrix&lt; T &gt;::operator()</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="119" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1afefad923ade89e26040acc0e7cb074fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T qmatrix&lt; T &gt;::operator()</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="120" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1adbecb76ad443d23f5d51ad607594418d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; qmatrix&lt; T &gt;::at</definition>
        <argsstring>(size_t i)</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="121" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a59c909a73509ee458350a68d2aff7fb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T qmatrix&lt; T &gt;::at</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="122" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a00cbc3509491b6b8abb6ce93b4cda0a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t qmatrix&lt; T &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="123" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1ae3badb1bfe40d438cf529bfd2389fe9e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t qmatrix&lt; T &gt;::getrow</definition>
        <argsstring>() const</argsstring>
        <name>getrow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="124" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a0a4cf01d412b597898aadf2b13001f40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t qmatrix&lt; T &gt;::getcolumn</definition>
        <argsstring>() const</argsstring>
        <name>getcolumn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="125" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a8be0ac95f15d11a130d5397b8622e1dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; qmatrix&lt; T &gt;::operator()</definition>
        <argsstring>(size_t i, size_t j)</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="126" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="126" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a75f8a716ded3a482d7afb07de0262aa3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T qmatrix&lt; T &gt;::operator()</definition>
        <argsstring>(size_t i, size_t j) const</argsstring>
        <name>operator()</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="129" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a7dda1dd830d35a2f020d2220ccd561bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; qmatrix&lt; T &gt;::at</definition>
        <argsstring>(size_t i, size_t j)</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="133" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1aeb878190b7ec527fb1e8f54dca779257" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T qmatrix&lt; T &gt;::at</definition>
        <argsstring>(size_t i, size_t j) const</argsstring>
        <name>at</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="134" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a5aad44dcbace9580be01d99aadb5086d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T qmatrix&lt; T &gt;::sum</definition>
        <argsstring>() const</argsstring>
        <name>sum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="139" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="139" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a64ba36d00e24160611c9815d75c74f78" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T qmatrix&lt; T &gt;::absSum</definition>
        <argsstring>() const</argsstring>
        <name>absSum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="143" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="143" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a205d170d9b02bca054d32a4065d1e941" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T qmatrix&lt; T &gt;::trace</definition>
        <argsstring>() const</argsstring>
        <name>trace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="151" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="151" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1ad7e0749cdd0c30fbab6b6fa12005e083" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto qmatrix&lt; T &gt;::getdiagonal</definition>
        <argsstring>()</argsstring>
        <name>getdiagonal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="161" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="161" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a7955242553c86d87ac3bde3fd097d190" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt;</type>
        <definition>qmatrix&lt;T&gt; qmatrix&lt; T &gt;::id</definition>
        <argsstring>(size_t _row=0) const</argsstring>
        <name>id</name>
        <param>
          <type>size_t</type>
          <declname>_row</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="168" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="168" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a2a34dfb0454aed7513510315a0cf2089" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; double &gt;</type>
        <definition>qmatrix&lt;double&gt; qmatrix&lt; T &gt;::real</definition>
        <argsstring>() const</argsstring>
        <name>real</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="181" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="181" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a31bb6f471a36331761b3ac4b42686dfa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; double &gt;</type>
        <definition>qmatrix&lt;double&gt; qmatrix&lt; T &gt;::imag</definition>
        <argsstring>() const</argsstring>
        <name>imag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="189" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="189" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a246c16a9b083e8a0266a0ddaa7f6de47" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt;</type>
        <definition>qmatrix&lt;T&gt; qmatrix&lt; T &gt;::cTranspose</definition>
        <argsstring>() const</argsstring>
        <name>cTranspose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="197" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="197" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a98ec0f47e20363d3655635d52619d408" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqmatrix" kindref="compound">qmatrix</ref></type>
        <definition>qmatrix qmatrix&lt; T &gt;::operator*</definition>
        <argsstring>(const T &amp;x) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="214" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="214" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a3ba03da6cabf12f4f4d75ccd1368ae06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqmatrix" kindref="compound">qmatrix</ref></type>
        <definition>qmatrix qmatrix&lt; T &gt;::operator/</definition>
        <argsstring>(const T &amp;x) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="222" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="222" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a6a7eb56e727f08ced623d0059c6b9ba0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* qmatrix&lt; T &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="235" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="235" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1ac32c4b85f89ddf6a57a839552e655443" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T* qmatrix&lt; T &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="236" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="236" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1ad88578dd84b8ef2dae3bd3aeacdbec11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto qmatrix&lt; T &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="237" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="237" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a0ffccbdbc2d71cce1f2880af77267fd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto qmatrix&lt; T &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="238" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="238" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1ac635d01b275109809173db421ff94d6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void qmatrix&lt; T &gt;::display</definition>
        <argsstring>()</argsstring>
        <name>display</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="241" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a66283796414743d4874e2fd1af0088fa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqmatrix" kindref="compound">qmatrix</ref></type>
        <definition>qmatrix qmatrix&lt; T &gt;::operator+</definition>
        <argsstring>(const qmatrix&lt; T &gt; &amp;rhs) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="242" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="242" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a80abc4437066e9696ad9e185144e6a7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqmatrix" kindref="compound">qmatrix</ref></type>
        <definition>qmatrix qmatrix&lt; T &gt;::operator-</definition>
        <argsstring>(const qmatrix&lt; T &gt; &amp;rhs) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="257" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="257" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1afc7f48927e57e2192c46b3a0c15fde63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt;</type>
        <definition>qmatrix&lt;T&gt; qmatrix&lt; T &gt;::dot</definition>
        <argsstring>(const qmatrix&lt; T &gt; &amp;rhs, double talpha=1.0)</argsstring>
        <name>dot</name>
        <param>
          <type>const <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>talpha</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="268" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="268" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a5effa22b7013d93c8450459e49b34d81" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; double &gt;</type>
        <definition>std::vector&lt;double&gt; qmatrix&lt; T &gt;::diag</definition>
        <argsstring>()</argsstring>
        <name>diag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="292" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="292" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1aef575497c81ee49ba52f8913d9d5063d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt;, <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt;, cm_vec &gt;</type>
        <definition>std::tuple&lt;qmatrix&lt;T&gt;, qmatrix&lt;T&gt;, cm_vec&gt; qmatrix&lt; T &gt;::nonsys_diag_complex</definition>
        <argsstring>()</argsstring>
        <name>nonsys_diag_complex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="323" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="323" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a068d7b240b64ad73faca162b3b1f0392" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; std::complex&lt; T &gt; &gt;, <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; std::complex&lt; T &gt; &gt;, std::vector&lt; std::complex&lt; T &gt; &gt; &gt;</type>
        <definition>std::tuple&lt;qmatrix&lt;std::complex&lt;T&gt; &gt;, qmatrix&lt;std::complex&lt;T&gt; &gt;, std::vector&lt;std::complex&lt;T&gt; &gt; &gt; qmatrix&lt; T &gt;::nonsys_diag_real</definition>
        <argsstring>()</argsstring>
        <name>nonsys_diag_real</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="373" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="373" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1a9b39a5a3f83923ed339b822b176b16a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt;</type>
        <definition>qmatrix&lt;T&gt; qmatrix&lt; T &gt;::krDot</definition>
        <argsstring>(const qmatrix&lt; T &gt; &amp;rhs, double alpha=1)</argsstring>
        <name>krDot</name>
        <param>
          <type>const <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="459" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="459" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classqmatrix_1ac97b21c855548d7ee7b3c1c0f159bcf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void qmatrix&lt; T &gt;::unitary_transform</definition>
        <argsstring>(const qmatrix&lt; T &gt; &amp;eigen_vector)</argsstring>
        <name>unitary_transform</name>
        <param>
          <type>const <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt; &amp;</type>
          <declname>eigen_vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="479" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="479" bodyend="484"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classqmatrix_1a99b817177e1bf80d8b694c6e142715b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const qmatrix&lt; T &gt; &amp;val)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; T &gt; &amp;</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/utils/qmatrix.hpp" line="449" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="449" bodyend="458"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="nrgcore/include/utils/qmatrix.hpp" line="50" column="1" bodyfile="nrgcore/include/utils/qmatrix.hpp" bodystart="50" bodyend="485"/>
    <listofallmembers>
      <member refid="classqmatrix_1a64ba36d00e24160611c9815d75c74f78" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>absSum</name></member>
      <member refid="classqmatrix_1adbecb76ad443d23f5d51ad607594418d" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>at</name></member>
      <member refid="classqmatrix_1a59c909a73509ee458350a68d2aff7fb8" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>at</name></member>
      <member refid="classqmatrix_1a7dda1dd830d35a2f020d2220ccd561bd" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>at</name></member>
      <member refid="classqmatrix_1aeb878190b7ec527fb1e8f54dca779257" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>at</name></member>
      <member refid="classqmatrix_1ad88578dd84b8ef2dae3bd3aeacdbec11" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>begin</name></member>
      <member refid="classqmatrix_1a2680c028b1b135431723997b8baebc6e" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>clear</name></member>
      <member refid="classqmatrix_1a27efbbb3280bcc5e102845f521a5874b" prot="private" virt="non-virtual"><scope>qmatrix</scope><name>column</name></member>
      <member refid="classqmatrix_1a246c16a9b083e8a0266a0ddaa7f6de47" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>cTranspose</name></member>
      <member refid="classqmatrix_1a6a7eb56e727f08ced623d0059c6b9ba0" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>data</name></member>
      <member refid="classqmatrix_1ac32c4b85f89ddf6a57a839552e655443" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>data</name></member>
      <member refid="classqmatrix_1a5effa22b7013d93c8450459e49b34d81" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>diag</name></member>
      <member refid="classqmatrix_1ae168d34e9394535fa085666e7e9b53c9" prot="private" virt="non-virtual"><scope>qmatrix</scope><name>dim</name></member>
      <member refid="classqmatrix_1ac635d01b275109809173db421ff94d6e" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>display</name></member>
      <member refid="classqmatrix_1afc7f48927e57e2192c46b3a0c15fde63" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>dot</name></member>
      <member refid="classqmatrix_1a0ffccbdbc2d71cce1f2880af77267fd1" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>end</name></member>
      <member refid="classqmatrix_1a0a4cf01d412b597898aadf2b13001f40" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>getcolumn</name></member>
      <member refid="classqmatrix_1ad7e0749cdd0c30fbab6b6fa12005e083" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>getdiagonal</name></member>
      <member refid="classqmatrix_1ae3badb1bfe40d438cf529bfd2389fe9e" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>getrow</name></member>
      <member refid="classqmatrix_1a7955242553c86d87ac3bde3fd097d190" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>id</name></member>
      <member refid="classqmatrix_1a31bb6f471a36331761b3ac4b42686dfa" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>imag</name></member>
      <member refid="classqmatrix_1a9b39a5a3f83923ed339b822b176b16a1" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>krDot</name></member>
      <member refid="classqmatrix_1a97ad80143ea431b38846dc9694fb36a3" prot="private" virt="non-virtual"><scope>qmatrix</scope><name>mat</name></member>
      <member refid="classqmatrix_1aef575497c81ee49ba52f8913d9d5063d" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>nonsys_diag_complex</name></member>
      <member refid="classqmatrix_1a068d7b240b64ad73faca162b3b1f0392" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>nonsys_diag_real</name></member>
      <member refid="classqmatrix_1aa844a436f313995011c9c6532aa56f69" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>operator()</name></member>
      <member refid="classqmatrix_1afefad923ade89e26040acc0e7cb074fc" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>operator()</name></member>
      <member refid="classqmatrix_1a8be0ac95f15d11a130d5397b8622e1dd" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>operator()</name></member>
      <member refid="classqmatrix_1a75f8a716ded3a482d7afb07de0262aa3" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>operator()</name></member>
      <member refid="classqmatrix_1a98ec0f47e20363d3655635d52619d408" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>operator*</name></member>
      <member refid="classqmatrix_1a66283796414743d4874e2fd1af0088fa" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>operator+</name></member>
      <member refid="classqmatrix_1a80abc4437066e9696ad9e185144e6a7b" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>operator-</name></member>
      <member refid="classqmatrix_1a3ba03da6cabf12f4f4d75ccd1368ae06" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>operator/</name></member>
      <member refid="classqmatrix_1a99b817177e1bf80d8b694c6e142715b3" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>operator&lt;&lt;</name></member>
      <member refid="classqmatrix_1a9e5e9003f3ce469757a099f0a5cb387d" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>qmatrix</name></member>
      <member refid="classqmatrix_1ab09878c317208706ea39b8cf868355ca" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>qmatrix</name></member>
      <member refid="classqmatrix_1a902c08267bf4f6e49a982140470a8014" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>qmatrix</name></member>
      <member refid="classqmatrix_1aa03000cc351014a3d862b32ad1d812e7" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>qmatrix</name></member>
      <member refid="classqmatrix_1a633f6c2391c796e4c7f3be3625c9534f" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>qmatrix</name></member>
      <member refid="classqmatrix_1a2a34dfb0454aed7513510315a0cf2089" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>real</name></member>
      <member refid="classqmatrix_1a0a392ae029af40d7eac0bd4dae61257a" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>resize</name></member>
      <member refid="classqmatrix_1abf573175a0121877413be95346290dd4" prot="private" virt="non-virtual"><scope>qmatrix</scope><name>row</name></member>
      <member refid="classqmatrix_1a00cbc3509491b6b8abb6ce93b4cda0a1" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>size</name></member>
      <member refid="classqmatrix_1a5aad44dcbace9580be01d99aadb5086d" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>sum</name></member>
      <member refid="classqmatrix_1a205d170d9b02bca054d32a4065d1e941" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>trace</name></member>
      <member refid="classqmatrix_1ac97b21c855548d7ee7b3c1c0f159bcf5" prot="public" virt="non-virtual"><scope>qmatrix</scope><name>unitary_transform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
