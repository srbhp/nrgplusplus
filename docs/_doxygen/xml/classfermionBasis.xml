<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classfermionBasis" kind="class" language="C++" prot="public">
    <compoundname>fermionBasis</compoundname>
    <derivedcompoundref refid="classfreeModel" prot="public" virt="non-virtual">freeModel</derivedcompoundref>
    <derivedcompoundref refid="classkondoTwoImpuritySC" prot="public" virt="non-virtual">kondoTwoImpuritySC</derivedcompoundref>
    <derivedcompoundref refid="classrabiAndersonSC" prot="public" virt="non-virtual">rabiAndersonSC</derivedcompoundref>
    <includes refid="fermionBasis_8hpp" local="no">fermionBasis.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classfermionBasis_1a497fc81023f5d5ed04e1f54e22632656" prot="public" static="no" strong="no">
        <type></type>
        <name>modelSymmetry</name>
        <enumvalue id="classfermionBasis_1a497fc81023f5d5ed04e1f54e22632656ac54e09a51bfeb0e6478b26e761fe3eef" prot="public">
          <name>chargeOnly</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfermionBasis_1a497fc81023f5d5ed04e1f54e22632656a08d2f9bd45991d7c66f72e77efcf8524" prot="public">
          <name>spinOnly</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classfermionBasis_1a497fc81023f5d5ed04e1f54e22632656a050c6a44dae5eedd146a22ed18bf6c1c" prot="public">
          <name>chargeAndSpin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="27" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="27" bodyend="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classfermionBasis_1a2dd696ddb8b77b9c5118a2340c871e73" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classqOperator" kindref="compound">qOperator</ref> &gt;</type>
        <definition>std::vector&lt;qOperator&gt; fermionBasis::f_dag_operator</definition>
        <argsstring></argsstring>
        <name>f_dag_operator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="32" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfermionBasis_1a974306b676a1fe1e91cea8feb63ecd74" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; double &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;double&gt; &gt; fermionBasis::fnParticle</definition>
        <argsstring></argsstring>
        <name>fnParticle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="33" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfermionBasis_1a0ddccd63033ccaa781227cb43b120d90" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt;&gt; &gt;</type>
        <definition>std::vector&lt;qmatrix&lt;&gt; &gt; fermionBasis::fermionOprMat</definition>
        <argsstring></argsstring>
        <name>fermionOprMat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="315" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfermionBasis_1a528b6381dbefa5f0e5a593ae9eea0f05" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool fermionBasis::DebugView</definition>
        <argsstring></argsstring>
        <name>DebugView</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="321" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="321" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfermionBasis_1a9845f5fecc0eb2a3d94c7d5d9768d04e" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;int&gt; &gt; fermionBasis::nQuantum</definition>
        <argsstring></argsstring>
        <name>nQuantum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="326" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfermionBasis_1aa1faeb4a739d684b7bf99cdddfd3f347" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;int&gt; &gt; fermionBasis::unique_Qnumbers</definition>
        <argsstring></argsstring>
        <name>unique_Qnumbers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="327" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classfermionBasis_1a5a358bb03ed982dee80d5f10820647ab" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; size_t &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;size_t&gt; &gt; fermionBasis::nQBlocks</definition>
        <argsstring></argsstring>
        <name>nQBlocks</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="329" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="329" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classfermionBasis_1adc24b22c2481f077f7b24d71f7545b14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>fermionBasis::fermionBasis</definition>
        <argsstring>(size_t dof, modelSymmetry l)</argsstring>
        <name>fermionBasis</name>
        <param>
          <type>size_t</type>
          <declname>dof</declname>
        </param>
        <param>
          <type>modelSymmetry</type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="34" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="34" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1a2de7a51570d6cdc0cf8c8e808e6de446" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto fermionBasis::get_raw_f_dag_operator</definition>
        <argsstring>() const</argsstring>
        <name>get_raw_f_dag_operator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="69" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1a52c7f2b5afc842522517d52155e9ac8e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto fermionBasis::get_f_dag_operator</definition>
        <argsstring>() const</argsstring>
        <name>get_f_dag_operator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="70" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="70" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1aca21027917b357582e77359cf96d922b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fermionBasis::create_QuantumNChargeonly</definition>
        <argsstring>()</argsstring>
        <name>create_QuantumNChargeonly</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="71" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="71" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1a00eff0dae72666ad15c9934d7e83a78b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fermionBasis::create_QuantumNspinCharge</definition>
        <argsstring>()</argsstring>
        <name>create_QuantumNspinCharge</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="86" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="86" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1ab05e316702a319543ebc40bd1dc3eb5a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fermionBasis::create_QuantumSpinOnly</definition>
        <argsstring>(std::vector&lt; std::vector&lt; size_t &gt;&gt; &amp;qsymmetry)</argsstring>
        <name>create_QuantumSpinOnly</name>
        <param>
          <type>std::vector&lt; std::vector&lt; size_t &gt;&gt; &amp;</type>
          <declname>qsymmetry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="106" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="106" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1ae7abc1c67fb5da8ece9e1970725af8dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fermionBasis::createQNumbers</definition>
        <argsstring>(const std::vector&lt; std::vector&lt; size_t &gt;&gt; &amp;qsymmetry)</argsstring>
        <name>createQNumbers</name>
        <param>
          <type>const std::vector&lt; std::vector&lt; size_t &gt;&gt; &amp;</type>
          <declname>qsymmetry</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="150" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="150" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1a64026f3f3cab8f8524261b7315cf965e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fermionBasis::create_Block_structure</definition>
        <argsstring>()</argsstring>
        <name>create_Block_structure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="170" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="170" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1a539b073098d53e94acea4eef299d2bcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto fermionBasis::get_unique_Qnumbers</definition>
        <argsstring>()</argsstring>
        <name>get_unique_Qnumbers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="209" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="209" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1aaefbf07cab9ad739c1a12b2b96eb2c12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classqOperator" kindref="compound">qOperator</ref> &gt;</type>
        <definition>std::vector&lt;qOperator&gt; fermionBasis::get_block_operators</definition>
        <argsstring>(const std::vector&lt; qmatrix&lt;&gt;&gt; &amp;sys_operators)</argsstring>
        <name>get_block_operators</name>
        <param>
          <type>const std::vector&lt; <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt;&gt;&gt; &amp;</type>
          <declname>sys_operators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="216" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="216" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1acbacaa1b5f8b69f3aec6055dfd14eff1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classqOperator" kindref="compound">qOperator</ref></type>
        <definition>qOperator fermionBasis::get_block_Hamiltonian</definition>
        <argsstring>(const qmatrix&lt; double &gt; &amp;sys_operators)</argsstring>
        <name>get_block_Hamiltonian</name>
        <param>
          <type>const <ref refid="classqmatrix" kindref="compound">qmatrix</ref>&lt; double &gt; &amp;</type>
          <declname>sys_operators</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="243" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="243" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1aa287e3c7aa98d2c9689ab7880659b061" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto fermionBasis::get_basis</definition>
        <argsstring>() const</argsstring>
        <name>get_basis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="289" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="289" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1a70829559e10e719c5a3fb673194bd6cc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fermionBasis::setDebugMode</definition>
        <argsstring>(bool debug=true)</argsstring>
        <name>setDebugMode</name>
        <param>
          <type>bool</type>
          <declname>debug</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="290" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="290" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1a6bda55637fbbc02bfa5b979090534ef4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fermionBasis::createFermionBasis</definition>
        <argsstring>(size_t ldof)</argsstring>
        <name>createFermionBasis</name>
        <param>
          <type>size_t</type>
          <declname>ldof</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="291" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="291" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classfermionBasis_1a035b5e6b76ebe2d809032d2b3adabe2f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void fermionBasis::set_f_dag_operators</definition>
        <argsstring>()</argsstring>
        <name>set_f_dag_operators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="nrgcore/include/models/fermionBasis.hpp" line="316" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="316" bodyend="318"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This is the main basis class for the electrons. Every other fermion model class is derived from this class. We normally dont inherit from this class. Just use as a local object. See for example spinhalf. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="14">
        <label>kondoTwoImpuritySC</label>
        <link refid="classkondoTwoImpuritySC"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="15">
        <label>rabiAndersonSC</label>
        <link refid="classrabiAndersonSC"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="13">
        <label>freeModel</label>
        <link refid="classfreeModel"/>
        <childnode refid="12" relation="public-inheritance">
        </childnode>
      </node>
      <node id="12">
        <label>fermionBasis</label>
        <link refid="classfermionBasis"/>
      </node>
    </inheritancegraph>
    <location file="nrgcore/include/models/fermionBasis.hpp" line="20" column="1" bodyfile="nrgcore/include/models/fermionBasis.hpp" bodystart="20" bodyend="330"/>
    <listofallmembers>
      <member refid="classfermionBasis_1a497fc81023f5d5ed04e1f54e22632656a050c6a44dae5eedd146a22ed18bf6c1c" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>chargeAndSpin</name></member>
      <member refid="classfermionBasis_1a497fc81023f5d5ed04e1f54e22632656ac54e09a51bfeb0e6478b26e761fe3eef" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>chargeOnly</name></member>
      <member refid="classfermionBasis_1a64026f3f3cab8f8524261b7315cf965e" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>create_Block_structure</name></member>
      <member refid="classfermionBasis_1aca21027917b357582e77359cf96d922b" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>create_QuantumNChargeonly</name></member>
      <member refid="classfermionBasis_1a00eff0dae72666ad15c9934d7e83a78b" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>create_QuantumNspinCharge</name></member>
      <member refid="classfermionBasis_1ab05e316702a319543ebc40bd1dc3eb5a" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>create_QuantumSpinOnly</name></member>
      <member refid="classfermionBasis_1a6bda55637fbbc02bfa5b979090534ef4" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>createFermionBasis</name></member>
      <member refid="classfermionBasis_1ae7abc1c67fb5da8ece9e1970725af8dc" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>createQNumbers</name></member>
      <member refid="classfermionBasis_1a528b6381dbefa5f0e5a593ae9eea0f05" prot="private" virt="non-virtual"><scope>fermionBasis</scope><name>DebugView</name></member>
      <member refid="classfermionBasis_1a2dd696ddb8b77b9c5118a2340c871e73" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>f_dag_operator</name></member>
      <member refid="classfermionBasis_1adc24b22c2481f077f7b24d71f7545b14" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>fermionBasis</name></member>
      <member refid="classfermionBasis_1a0ddccd63033ccaa781227cb43b120d90" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>fermionOprMat</name></member>
      <member refid="classfermionBasis_1a974306b676a1fe1e91cea8feb63ecd74" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>fnParticle</name></member>
      <member refid="classfermionBasis_1aa287e3c7aa98d2c9689ab7880659b061" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>get_basis</name></member>
      <member refid="classfermionBasis_1acbacaa1b5f8b69f3aec6055dfd14eff1" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>get_block_Hamiltonian</name></member>
      <member refid="classfermionBasis_1aaefbf07cab9ad739c1a12b2b96eb2c12" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>get_block_operators</name></member>
      <member refid="classfermionBasis_1a52c7f2b5afc842522517d52155e9ac8e" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>get_f_dag_operator</name></member>
      <member refid="classfermionBasis_1a2de7a51570d6cdc0cf8c8e808e6de446" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>get_raw_f_dag_operator</name></member>
      <member refid="classfermionBasis_1a539b073098d53e94acea4eef299d2bcf" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>get_unique_Qnumbers</name></member>
      <member refid="classfermionBasis_1a497fc81023f5d5ed04e1f54e22632656" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>modelSymmetry</name></member>
      <member refid="classfermionBasis_1a5a358bb03ed982dee80d5f10820647ab" prot="private" virt="non-virtual"><scope>fermionBasis</scope><name>nQBlocks</name></member>
      <member refid="classfermionBasis_1a9845f5fecc0eb2a3d94c7d5d9768d04e" prot="private" virt="non-virtual"><scope>fermionBasis</scope><name>nQuantum</name></member>
      <member refid="classfermionBasis_1a035b5e6b76ebe2d809032d2b3adabe2f" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>set_f_dag_operators</name></member>
      <member refid="classfermionBasis_1a70829559e10e719c5a3fb673194bd6cc" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>setDebugMode</name></member>
      <member refid="classfermionBasis_1a497fc81023f5d5ed04e1f54e22632656a08d2f9bd45991d7c66f72e77efcf8524" prot="public" virt="non-virtual"><scope>fermionBasis</scope><name>spinOnly</name></member>
      <member refid="classfermionBasis_1aa1faeb4a739d684b7bf99cdddfd3f347" prot="private" virt="non-virtual"><scope>fermionBasis</scope><name>unique_Qnumbers</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
