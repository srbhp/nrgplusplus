<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="qOperator_8hpp" kind="file" language="C++">
    <compoundname>qOperator.hpp</compoundname>
    <includes refid="qmatrix_8hpp" local="yes">utils/qmatrix.hpp</includes>
    <includes local="no">array</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cstddef</includes>
    <includes local="no">iostream</includes>
    <includes local="no">map</includes>
    <includes local="no">optional</includes>
    <includes local="no">ostream</includes>
    <includes local="no">set</includes>
    <includedby refid="fdmBackwardIteration_8hpp" local="yes">nrgcore/include/dynamics/fdmBackwardIteration.hpp</includedby>
    <includedby refid="fdmSpectrum_8hpp" local="yes">nrgcore/include/dynamics/fdmSpectrum.hpp</includedby>
    <includedby refid="fermionBasis_8hpp" local="yes">nrgcore/include/models/fermionBasis.hpp</includedby>
    <includedby refid="freeModel_8hpp" local="yes">nrgcore/include/models/freeModel.hpp</includedby>
    <includedby refid="kondoSC_8hpp" local="yes">nrgcore/include/models/kondoSC.hpp</includedby>
    <includedby refid="kondoTwoImpuritySC_8hpp" local="yes">nrgcore/include/models/kondoTwoImpuritySC.hpp</includedby>
    <includedby refid="rabiAndersonSC_8hpp" local="yes">nrgcore/include/models/rabiAndersonSC.hpp</includedby>
    <includedby refid="resonantTwoLead_8hpp" local="yes">nrgcore/include/models/resonantTwoLead.hpp</includedby>
    <includedby refid="spinhalf_8hpp" local="yes">nrgcore/include/models/spinhalf.hpp</includedby>
    <includedby refid="spinhalfKondo_8hpp" local="yes">nrgcore/include/models/spinhalfKondo.hpp</includedby>
    <includedby refid="spinhalfSC_8hpp" local="yes">nrgcore/include/models/spinhalfSC.hpp</includedby>
    <includedby refid="spinlessTwoLead_8hpp" local="yes">nrgcore/include/models/spinlessTwoLead.hpp</includedby>
    <includedby refid="spinnless_8hpp" local="yes">nrgcore/include/models/spinnless.hpp</includedby>
    <includedby refid="twoChannel_8hpp" local="yes">nrgcore/include/models/twoChannel.hpp</includedby>
    <includedby refid="nrgcore_8hpp" local="yes">nrgcore/include/nrgcore/nrgcore.hpp</includedby>
    <includedby refid="nrgData_8hpp" local="yes">nrgcore/include/nrgcore/nrgData.hpp</includedby>
    <includedby refid="sysOperator_8hpp" local="yes">nrgcore/include/nrgcore/sysOperator.hpp</includedby>
    <includedby refid="fdmThermodynamics_8hpp" local="yes">nrgcore/include/static/fdmThermodynamics.hpp</includedby>
    <incdepgraph>
      <node id="421">
        <label>cmath</label>
      </node>
      <node id="429">
        <label>stdexcept</label>
      </node>
      <node id="425">
        <label>numeric</label>
      </node>
      <node id="426">
        <label>mkl.h</label>
      </node>
      <node id="435">
        <label>map</label>
      </node>
      <node id="428">
        <label>ostream</label>
      </node>
      <node id="420">
        <label>utils/qmatrix.hpp</label>
        <link refid="qmatrix_8hpp_source"/>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="422" relation="include">
        </childnode>
        <childnode refid="423" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="425" relation="include">
        </childnode>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="432" relation="include">
        </childnode>
      </node>
      <node id="430">
        <label>tuple</label>
      </node>
      <node id="436">
        <label>optional</label>
      </node>
      <node id="432">
        <label>vector</label>
      </node>
      <node id="433">
        <label>array</label>
      </node>
      <node id="419">
        <label>nrgcore/include/nrgcore/qOperator.hpp</label>
        <link refid="qOperator_8hpp"/>
        <childnode refid="420" relation="include">
        </childnode>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="421" relation="include">
        </childnode>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="424" relation="include">
        </childnode>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="437" relation="include">
        </childnode>
      </node>
      <node id="424">
        <label>iostream</label>
      </node>
      <node id="434">
        <label>cstddef</label>
      </node>
      <node id="427">
        <label>mkl_lapacke.h</label>
      </node>
      <node id="431">
        <label>type_traits</label>
      </node>
      <node id="437">
        <label>set</label>
      </node>
      <node id="422">
        <label>complex</label>
      </node>
      <node id="423">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="452">
        <label>nrgcore/include/models/twoChannel.hpp</label>
        <link refid="twoChannel_8hpp_source"/>
      </node>
      <node id="447">
        <label>nrgcore/include/models/spinhalf.hpp</label>
        <link refid="spinhalf_8hpp_source"/>
      </node>
      <node id="445">
        <label>nrgcore/include/models/rabiAndersonSC.hpp</label>
        <link refid="rabiAndersonSC_8hpp_source"/>
      </node>
      <node id="440">
        <label>nrgcore/include/dynamics/fdmSpectrum.hpp</label>
        <link refid="fdmSpectrum_8hpp_source"/>
      </node>
      <node id="439">
        <label>nrgcore/include/dynamics/fdmBackwardIteration.hpp</label>
        <link refid="fdmBackwardIteration_8hpp_source"/>
      </node>
      <node id="451">
        <label>nrgcore/include/models/spinnless.hpp</label>
        <link refid="spinnless_8hpp_source"/>
      </node>
      <node id="454">
        <label>nrgcore/include/nrgcore/nrgData.hpp</label>
        <link refid="nrgData_8hpp_source"/>
        <childnode refid="439" relation="include">
        </childnode>
      </node>
      <node id="442">
        <label>nrgcore/include/models/freeModel.hpp</label>
        <link refid="freeModel_8hpp_source"/>
      </node>
      <node id="455">
        <label>nrgcore/include/nrgcore/sysOperator.hpp</label>
        <link refid="sysOperator_8hpp_source"/>
      </node>
      <node id="448">
        <label>nrgcore/include/models/spinhalfKondo.hpp</label>
        <link refid="spinhalfKondo_8hpp_source"/>
      </node>
      <node id="443">
        <label>nrgcore/include/models/kondoSC.hpp</label>
        <link refid="kondoSC_8hpp_source"/>
      </node>
      <node id="450">
        <label>nrgcore/include/models/spinlessTwoLead.hpp</label>
        <link refid="spinlessTwoLead_8hpp_source"/>
      </node>
      <node id="441">
        <label>nrgcore/include/models/fermionBasis.hpp</label>
        <link refid="fermionBasis_8hpp_source"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
      </node>
      <node id="453">
        <label>nrgcore/include/nrgcore/nrgcore.hpp</label>
        <link refid="nrgcore_8hpp_source"/>
      </node>
      <node id="438">
        <label>nrgcore/include/nrgcore/qOperator.hpp</label>
        <link refid="qOperator_8hpp"/>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="456">
        <label>nrgcore/include/static/fdmThermodynamics.hpp</label>
        <link refid="fdmThermodynamics_8hpp_source"/>
      </node>
      <node id="444">
        <label>nrgcore/include/models/kondoTwoImpuritySC.hpp</label>
        <link refid="kondoTwoImpuritySC_8hpp_source"/>
      </node>
      <node id="449">
        <label>nrgcore/include/models/spinhalfSC.hpp</label>
        <link refid="spinhalfSC_8hpp_source"/>
      </node>
      <node id="446">
        <label>nrgcore/include/models/resonantTwoLead.hpp</label>
        <link refid="resonantTwoLead_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classqOperator" prot="public">qOperator</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utils/qmatrix.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight></codeline>
<codeline lineno="21" refid="classqOperator" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classqOperator" kindref="compound">qOperator</ref><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>std::map&lt;std::array&lt;size_t,<sp/>2&gt;,<sp/><ref refid="classqmatrix" kindref="compound">qmatrix&lt;&gt;</ref>&gt;<sp/>storage;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="classqOperator" kindref="compound">qOperator</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="classqOperator" kindref="compound">qOperator</ref>(<ref refid="classqmatrix" kindref="compound">qmatrix&lt;double&gt;</ref><sp/>&amp;opr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>2&gt;<sp/>idx<sp/>=<sp/>{i,<sp/>j};<sp/></highlight><highlight class="comment">//<sp/>ToDo<sp/>:<sp/>Check<sp/>for<sp/>overrides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>storage[idx]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>std::move(opr);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>getMap()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;storage;<sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqmatrix" kindref="compound">qmatrix&lt;double&gt;</ref><sp/>&amp;opr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>2&gt;<sp/>idx<sp/>=<sp/>{i,<sp/>j};<sp/></highlight><highlight class="comment">//<sp/>ToDo<sp/>:<sp/>Check<sp/>for<sp/>overrides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storage.find(idx)<sp/>!=<sp/>storage.end())<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Found<sp/>operator<sp/>already&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>storage[idx]<sp/>=<sp/>opr;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(<ref refid="classqmatrix" kindref="compound">qmatrix&lt;double&gt;</ref><sp/>&amp;opr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>#pragma<sp/>omp<sp/>critical</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>2&gt;<sp/>idx<sp/>=<sp/>{i,<sp/>j};<sp/></highlight><highlight class="comment">//<sp/>ToDo<sp/>:<sp/>Check<sp/>for<sp/>overrides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storage.find(idx)<sp/>!=<sp/>storage.end())<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Found<sp/>operator<sp/>already&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage[idx]<sp/>=<sp/>std::move(opr);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="63" refid="classqOperator_1a1d4caefd06937b308b89508c483b1086" refkind="member"><highlight class="normal"><sp/><sp/>std::optional&lt;qmatrix&lt;double&gt;<sp/>*&gt;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::array&lt;size_t,<sp/>2&gt;<sp/>idx<sp/>=<sp/>{i,<sp/>j};<sp/></highlight><highlight class="comment">//<sp/>ToDo<sp/>:<sp/>Check<sp/>for<sp/>overrides</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(storage.find(idx)<sp/>!=<sp/>storage.end())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;storage[idx];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>else<sp/>return<sp/>empty<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>{};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80" refid="classqOperator_1ae5a1ca3e849160806d26966981325738" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqOperator_1ae5a1ca3e849160806d26966981325738" kindref="member">unitaryTransform</ref>(<ref refid="classqOperator" kindref="compound">qOperator</ref><sp/>&amp;U)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO(sp):<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>correct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;aa<sp/>:<sp/>storage)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out<sp/>&lt;&lt;<sp/>&quot;[&quot;<sp/>&lt;&lt;<sp/>aa.first[0]<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>aa.first[1]<sp/>&lt;&lt;<sp/>&quot;]=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;|&quot;<sp/>&lt;&lt;<sp/>aa.second;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/><sp/><sp/><sp/>=<sp/>aa.first[0];</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/><sp/><sp/><sp/>=<sp/>aa.first[1];</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aa.second<sp/>=<sp/>U.<ref refid="classqOperator_1a1d4caefd06937b308b89508c483b1086" kindref="member">get</ref>(i,<sp/>i).value()-&gt;cTranspose().dot(aa.second).dot(</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(U.<ref refid="classqOperator_1a1d4caefd06937b308b89508c483b1086" kindref="member">get</ref>(j,<sp/>j)).value());</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::optional&lt;qmatrix&lt;&gt;&gt;<sp/>get_transposed_operator(size_t<sp/>i,<sp/>size_t<sp/>j)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>//<sp/>TODO:<sp/>We<sp/>are<sp/>returning<sp/>the<sp/>full<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>auto<sp/>idx<sp/>=<sp/>i<sp/>+<sp/>nBlocks<sp/>*<sp/>j;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(storage.find(idx)<sp/>!=<sp/>storage.end())<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>storage.at(idx).transpose();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}<sp/>else<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>return<sp/>{};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//}</highlight></codeline>
<codeline lineno="104" refid="classqOperator_1aeef3533a438069661e929daaa1431ff9" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqOperator_1aeef3533a438069661e929daaa1431ff9" kindref="member">clear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>Matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;aa<sp/>:<sp/>storage)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>aa.second.clear();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>storage.clear();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="117" refid="classqOperator_1a296b5e0ffb7c893769af4faa1fc3c248" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classqOperator_1a296b5e0ffb7c893769af4faa1fc3c248" kindref="member">display</ref>(std::ostream<sp/>&amp;out)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;aa<sp/>:<sp/>storage)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>aa.first[0]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>aa.first[1]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]=&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>aa.second;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream<sp/>&amp;operator&lt;&lt;(std::ostream<sp/>&amp;out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classqOperator" kindref="compound">qOperator</ref><sp/>&amp;val)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>val.<ref refid="classqOperator_1a296b5e0ffb7c893769af4faa1fc3c248" kindref="member">display</ref>(out);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>out;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="nrgcore/include/nrgcore/qOperator.hpp"/>
  </compounddef>
</doxygen>
